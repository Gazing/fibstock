{"ast":null,"code":"var _jsxFileName = \"/Users/danny/git/fibstock/fibstock/src/components/SearchBar.js\";\nimport React from 'react';\nimport '../styles/SearchBar.css';\nimport logo from \"../logo.svg\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\nexport default class SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onTextChanged = e => {\n      const value = e.target.value;\n      const items = this.state.items;\n      fetch(\"https://www.alphavantage.co/query?function=SYMBOL_SEARCH&keywords=\" + value + \"&apikey=T2BNSYRDVEE0BHYF\").then(res => res.json()).then(result => {\n        this.setState({\n          isLoaded: true,\n          items: result\n        });\n      }, // Note: it's important to handle errors here\n      // instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components.\n      error => {\n        this.setState({\n          isLoaded: true,\n          error\n        });\n      });\n      let suggestions = [];\n\n      if (value.length > 0) {\n        const regex = new RegExp(\"^\".concat(value), 'i');\n        suggestions = this.items.sort().filter(v => regex.test(v));\n      }\n\n      this.setState(() => ({\n        suggestions,\n        text: value\n      }));\n    };\n\n    this.items = [];\n    this.state = {\n      items: [],\n      suggestions: [],\n      text: '',\n      isLoaded: false\n    };\n  }\n\n  renderSuggestions() {\n    const suggestions = this.state.suggestions;\n    this.items = this.state.data.map(item => item.name);\n\n    if (suggestions.length === 0) {\n      return null;\n    }\n\n    return React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, suggestions.map(item => React.createElement(\"li\", {\n      onClick: () => this.suggestionSelected(item),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, item)));\n  }\n\n  suggestionSelected(value) {\n    this.setState(() => ({\n      text: value,\n      suggestions: []\n    }));\n  }\n\n  render() {\n    const text = this.state.text;\n    return React.createElement(\"div\", {\n      className: \"SearchBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      value: text,\n      onChange: this.onTextChanged,\n      type: \"text\",\n      placeholder: \"Type Company Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      value: \"\",\n      onClick: e => this.props.onGetClick(text),\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faSearch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/danny/git/fibstock/fibstock/src/components/SearchBar.js"],"names":["React","FontAwesomeIcon","faSearch","SearchBar","Component","constructor","props","onTextChanged","e","value","target","items","state","fetch","then","res","json","result","setState","isLoaded","error","suggestions","length","regex","RegExp","sort","filter","v","test","text","renderSuggestions","data","map","item","name","suggestionSelected","render","onGetClick"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../styles/SearchBar.css'\nimport logo from '../logo.svg';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default class SearchBar extends React.Component {\n    constructor(props){\n        super(props);\n        this.items = [];\n        this.state = {\n            items: [],\n            suggestions: [],\n            text: '',\n            isLoaded: false,\n        }\n    }\n\n    onTextChanged = (e) => {\n        const value = e.target.value;\n        const { items } = this.state;\n\n        fetch(\"https://www.alphavantage.co/query?function=SYMBOL_SEARCH&keywords=\" + value +\"&apikey=T2BNSYRDVEE0BHYF\")\n        .then(res => res.json())\n        .then(\n          (result) => {\n            this.setState({\n              isLoaded: true,\n              items: result\n            });\n          },\n          // Note: it's important to handle errors here\n          // instead of a catch() block so that we don't swallow\n          // exceptions from actual bugs in components.\n          (error) => {\n            this.setState({\n              isLoaded: true,\n              error\n            });\n          }\n        )\n\n\n        let suggestions = [];\n        if (value.length > 0){\n            const regex = new RegExp(`^${value}`, 'i');\n            suggestions = this.items.sort().filter(v => regex.test(v));\n        } \n        this.setState(() => ({suggestions, text: value}));\n    }\n\n    renderSuggestions () {\n        const { suggestions } = this.state;\n        this.items = this.state.data.map(item => item.name);\n\n        if (suggestions.length === 0){\n            return null;\n        } \n        return (\n            <ul>\n                {suggestions.map((item) => <li onClick={() => this.suggestionSelected(item)}>{item}</li>)}\n            </ul>\n        );\n    }\n\n    suggestionSelected (value) {\n        this.setState(() => ({\n            text: value,\n            suggestions: [],\n        }))\n    }\n\n    render () {\n        const { text } = this.state;\n\n        return (\n            <div className=\"SearchBox\">\n                <input value={text} onChange={this.onTextChanged} type=\"text\" placeholder=\"Type Company Name\" />\n                <button value=\"\" onClick={(e) => this.props.onGetClick(text)} type=\"text\">\n                    <FontAwesomeIcon icon={faSearch} />\n                </button>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}