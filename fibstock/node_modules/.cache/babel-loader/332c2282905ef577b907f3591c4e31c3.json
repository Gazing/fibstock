{"ast":null,"code":"var _jsxFileName = \"/Users/danny/git/fibstock/fibstock/src/components/SearchBar.js\";\nimport React from 'react';\nexport default class SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onTextChanged = e => {\n      const value = e.target.value;\n      let suggestions = [];\n\n      if (value.length > 0) {\n        const regex = new RegExp(\"^\".concat(value), 'i');\n        suggestions = this.items.sort().filter(v => regex.test(v));\n      }\n\n      this.setState(() => ({\n        suggestions,\n        text: value\n      }));\n    };\n\n    this.items = [];\n    this.state = {\n      suggestions: [],\n      text: ''\n    };\n  }\n\n  renderSuggestions() {\n    const suggestions = this.state.suggestions;\n    this.items = this.state.data.map(item => item.name);\n\n    if (suggestions.length === 0) {\n      return null;\n    }\n\n    return React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, suggestions.map(item => React.createElement(\"li\", {\n      onClick: () => this.suggestionSelected(item),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, item)));\n  }\n\n  suggestionSelected(value) {\n    this.setState(() => ({\n      text: value,\n      suggestions: []\n    }));\n  }\n\n  render() {\n    const text = this.state.text;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      value: text,\n      onChange: this.onTextChanged,\n      type: \"text\",\n      placeholder: \"Type Company Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/danny/git/fibstock/fibstock/src/components/SearchBar.js"],"names":["React","SearchBar","Component","constructor","props","onTextChanged","e","value","target","suggestions","length","regex","RegExp","items","sort","filter","v","test","setState","text","state","renderSuggestions","data","map","item","name","suggestionSelected","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,SAAN,SAAwBD,KAAK,CAACE,SAA9B,CAAwC;AACnDC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SASlBC,aATkB,GASDC,CAAD,IAAO;AACnB,YAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAAvB;AACA,UAAIE,WAAW,GAAG,EAAlB;;AACA,UAAIF,KAAK,CAACG,MAAN,GAAe,CAAnB,EAAqB;AACjB,cAAMC,KAAK,GAAG,IAAIC,MAAJ,YAAeL,KAAf,GAAwB,GAAxB,CAAd;AACAE,QAAAA,WAAW,GAAG,KAAKI,KAAL,CAAWC,IAAX,GAAkBC,MAAlB,CAAyBC,CAAC,IAAIL,KAAK,CAACM,IAAN,CAAWD,CAAX,CAA9B,CAAd;AACH;;AACD,WAAKE,QAAL,CAAc,OAAO;AAACT,QAAAA,WAAD;AAAcU,QAAAA,IAAI,EAAEZ;AAApB,OAAP,CAAd;AACH,KAjBiB;;AAEd,SAAKM,KAAL,GAAa,EAAb;AACA,SAAKO,KAAL,GAAa;AACTX,MAAAA,WAAW,EAAE,EADJ;AAETU,MAAAA,IAAI,EAAE;AAFG,KAAb;AAIH;;AAYDE,EAAAA,iBAAiB,GAAI;AAAA,UACTZ,WADS,GACO,KAAKW,KADZ,CACTX,WADS;AAEjB,SAAKI,KAAL,GAAa,KAAKO,KAAL,CAAWE,IAAX,CAAgBC,GAAhB,CAAoBC,IAAI,IAAIA,IAAI,CAACC,IAAjC,CAAb;;AAEA,QAAIhB,WAAW,CAACC,MAAZ,KAAuB,CAA3B,EAA6B;AACzB,aAAO,IAAP;AACH;;AACD,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,WAAW,CAACc,GAAZ,CAAiBC,IAAD,IAAU;AAAI,MAAA,OAAO,EAAE,MAAM,KAAKE,kBAAL,CAAwBF,IAAxB,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmDA,IAAnD,CAA1B,CADL,CADJ;AAKH;;AAEDE,EAAAA,kBAAkB,CAAEnB,KAAF,EAAS;AACvB,SAAKW,QAAL,CAAc,OAAO;AACjBC,MAAAA,IAAI,EAAEZ,KADW;AAEjBE,MAAAA,WAAW,EAAE;AAFI,KAAP,CAAd;AAIH;;AAEDkB,EAAAA,MAAM,GAAI;AAAA,UACER,IADF,GACW,KAAKC,KADhB,CACED,IADF;AAGN,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,KAAK,EAAEA,IAAd;AAAoB,MAAA,QAAQ,EAAE,KAAKd,aAAnC;AAAkD,MAAA,IAAI,EAAC,MAAvD;AAA8D,MAAA,WAAW,EAAC,mBAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AAjDkD","sourcesContent":["import React from 'react';\n\nexport default class SearchBar extends React.Component {\n    constructor(props){\n        super(props);\n        this.items = [];\n        this.state = {\n            suggestions: [],\n            text: '',\n        }\n    }\n\n    onTextChanged = (e) => {\n        const value = e.target.value;\n        let suggestions = [];\n        if (value.length > 0){\n            const regex = new RegExp(`^${value}`, 'i');\n            suggestions = this.items.sort().filter(v => regex.test(v));\n        } \n        this.setState(() => ({suggestions, text: value}));\n    }\n\n    renderSuggestions () {\n        const { suggestions } = this.state;\n        this.items = this.state.data.map(item => item.name);\n\n        if (suggestions.length === 0){\n            return null;\n        } \n        return (\n            <ul>\n                {suggestions.map((item) => <li onClick={() => this.suggestionSelected(item)}>{item}</li>)}\n            </ul>\n        );\n    }\n\n    suggestionSelected (value) {\n        this.setState(() => ({\n            text: value,\n            suggestions: [],\n        }))\n    }\n\n    render () {\n        const { text } = this.state;\n\n        return (\n            <div>\n                <input value={text} onChange={this.onTextChanged} type=\"text\" placeholder=\"Type Company Name\" />\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}